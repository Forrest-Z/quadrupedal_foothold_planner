
################### 注意事项 ##############################
# 1、tm地图的frame保持与em地图相同
# 2、em建图需要位置坐标，注意是否发布了满足格式要求的位置
# 3、em建图如果是在全局坐标系下，那么需要确认是否有全局坐标系，如果没有的话则需要人工实现发布
# 4、多开发者合作时，注意tm地图和em地图配置文件的更新
# 5、注意根据实际需要决定em地图使用非融合地图（动态局部情况适用）还是融合地图（非动态全局情况适用）
########################################################

### debug mode
debug: true
debug2: true
debug3: false
checkDefaultFoothold_Debug: false

### traversability filter parameters
footRadius: 0.02
defaultFootholdThreshold: 0.9
candidateFootholdThreshold: 0.7
gaitCycleNum: 2

### gait parameters
searchRadius: 0.1 #建议搜索半径0.06～0.1
stepLength: 0.18 #建议步长0.16或0.18

RF_FIRST: false

RF_defaultBiasX: 0.3
RF_defaultBiasY: -0.2
RH_defaultBiasX: -0.3
RH_defaultBiasY: -0.2
LH_defaultBiasX: -0.3
LH_defaultBiasY: 0.2
LF_defaultBiasX: 0.3
LF_defaultBiasY: 0.2

### laikago_kinematics
laikago_kinematics:
  length: 0.4387
  width: 0.175
  l1: 0.037
  l2: 0.25
  l3: 0.25
  skewLength: 0.04 # skewLength = stepLength/4

### 初始站立位置
initial_position:
  x: -0.21 #0.11 #1.22(论文中一个gait cycle grid map落脚点规划演示用)
  y: -1.87
  z: 0

### nlopt非线性优化参数
nlopt:
  w1: 1
  w2: 1
  w3: 1
  w4: 1
  wr: 1
  wc: 1
  method: LN_COBYLA #LN_NEWUOA_BOUND
  manulStepSize: true
  stepSize: 1
  useInequalityConstraits: true

  #   enum algorithm {
  #   GN_DIRECT = 0,
  #   GN_DIRECT_L,
  #   GN_DIRECT_L_RAND,
  #   GN_DIRECT_NOSCAL,
  #   GN_DIRECT_L_NOSCAL,
  #   GN_DIRECT_L_RAND_NOSCAL,
  #   GN_ORIG_DIRECT,
  #   GN_ORIG_DIRECT_L,
  #   GD_STOGO,
  #   GD_STOGO_RAND,
  #   LD_LBFGS_NOCEDAL,
  #   LD_LBFGS,
  #   LN_PRAXIS,
  #   LD_VAR1,
  #   LD_VAR2,
  #   LD_TNEWTON,
  #   LD_TNEWTON_RESTART,
  #   LD_TNEWTON_PRECOND,
  #   LD_TNEWTON_PRECOND_RESTART,
  #   GN_CRS2_LM,
  #   GN_MLSL,
  #   GD_MLSL,
  #   GN_MLSL_LDS,
  #   GD_MLSL_LDS,
  #   LD_MMA,
  #   LN_COBYLA,
  #   LN_NEWUOA,
  #   LN_NEWUOA_BOUND,
  #   LN_NELDERMEAD,
  #   LN_SBPLX,
  #   LN_AUGLAG,
  #   LD_AUGLAG,
  #   LN_AUGLAG_EQ,
  #   LD_AUGLAG_EQ,
  #   LN_BOBYQA,
  #   GN_ISRES,
  #   AUGLAG,
  #   AUGLAG_EQ,
  #   G_MLSL,
  #   G_MLSL_LDS,
  #   LD_SLSQP,
  #   LD_CCSAQ,
  #   GN_ESCH,
  #   GN_AGS,
  #   NUM_ALGORITHMS        /* not an algorithm, just the number of them */
  # };

# static const char nlopt_algorithm_names[NLOPT_NUM_ALGORITHMS][256] = {
#     "DIRECT (global, no-derivative)",
#     "DIRECT-L (global, no-derivative)",
#     "Randomized DIRECT-L (global, no-derivative)",
#     "Unscaled DIRECT (global, no-derivative)",
#     "Unscaled DIRECT-L (global, no-derivative)",
#     "Unscaled Randomized DIRECT-L (global, no-derivative)",
#     "Original DIRECT version (global, no-derivative)",
#     "Original DIRECT-L version (global, no-derivative)",
# #ifdef NLOPT_CXX
#     "StoGO (global, derivative-based)",
#     "StoGO with randomized search (global, derivative-based)",
# #else
#     "StoGO (NOT COMPILED)",
#     "StoGO randomized (NOT COMPILED)",
# #endif
#     "original L-BFGS code by Nocedal et al. (NOT COMPILED)",
#     "Limited-memory BFGS (L-BFGS) (local, derivative-based)",
#     "Principal-axis, praxis (local, no-derivative)",
#     "Limited-memory variable-metric, rank 1 (local, derivative-based)",
#     "Limited-memory variable-metric, rank 2 (local, derivative-based)",
#     "Truncated Newton (local, derivative-based)",
#     "Truncated Newton with restarting (local, derivative-based)",
#     "Preconditioned truncated Newton (local, derivative-based)",
#     "Preconditioned truncated Newton with restarting (local, derivative-based)",
#     "Controlled random search (CRS2) with local mutation (global, no-derivative)",
#     "Multi-level single-linkage (MLSL), random (global, no-derivative)",
#     "Multi-level single-linkage (MLSL), random (global, derivative)",
#     "Multi-level single-linkage (MLSL), quasi-random (global, no-derivative)",
#     "Multi-level single-linkage (MLSL), quasi-random (global, derivative)",
#     "Method of Moving Asymptotes (MMA) (local, derivative)",
#     "COBYLA (Constrained Optimization BY Linear Approximations) (local, no-derivative)",
#     "NEWUOA unconstrained optimization via quadratic models (local, no-derivative)",
#     "Bound-constrained optimization via NEWUOA-based quadratic models (local, no-derivative)",
#     "Nelder-Mead simplex algorithm (local, no-derivative)",
#     "Sbplx variant of Nelder-Mead (re-implementation of Rowan's Subplex) (local, no-derivative)",
#     "Augmented Lagrangian method (local, no-derivative)",
#     "Augmented Lagrangian method (local, derivative)",
#     "Augmented Lagrangian method for equality constraints (local, no-derivative)",
#     "Augmented Lagrangian method for equality constraints (local, derivative)",
#     "BOBYQA bound-constrained optimization via quadratic models (local, no-derivative)",
#     "ISRES evolutionary constrained optimization (global, no-derivative)",
#     "Augmented Lagrangian method (needs sub-algorithm)",
#     "Augmented Lagrangian method for equality constraints (needs sub-algorithm)",
#     "Multi-level single-linkage (MLSL), random (global, needs sub-algorithm)",
#     "Multi-level single-linkage (MLSL), quasi-random (global, needs sub-algorithm)",
#     "Sequential Quadratic Programming (SQP) (local, derivative)",
#     "CCSA (Conservative Convex Separable Approximations) with simple quadratic approximations (local, derivative)",
#     "ESCH evolutionary strategy",
# #ifdef NLOPT_CXX11
#     "AGS (global, no-derivative)"
# #else
#     "AGS (NOT COMPILED)"
# #endif
# };